
# Configuration pour Admin Service - GitHub Config Repo
# Repository: https://github.com/wahidkaddache/esaa-config-repo

server:
  port: 8090
  servlet:
    context-path: /admin

spring:
  application:
    name: admin-service
  profiles:
    active: docker
  
  # Configuration Redis
  redis:
    host: ${SPRING_REDIS_HOST:redis}
    port: ${SPRING_REDIS_PORT:6379}
    timeout: 2000ms
    database: 0
    jedis:
      pool:
        max-active: 10
        max-idle: 5
        min-idle: 2
        max-wait: 2000ms

  # Configuration de sécurité
  security:
    user:
      name: ${ADMIN_SECURITY_USERNAME:esaa-admin}
      password: ${ADMIN_SECURITY_PASSWORD:admin-secure-2025}
      roles: ADMIN,SUPER_ADMIN

# Configuration Eureka (désactivé par défaut)
eureka:
  client:
    enabled: ${EUREKA_CLIENT_ENABLED:false}
    register-with-eureka: ${EUREKA_REGISTER:false}
    fetch-registry: ${EUREKA_FETCH:false}
    service-url:
      defaultZone: ${EUREKA_CLIENT_SERVICEURL_DEFAULTZONE:http://eureka-server:8761/eureka/}
  instance:
    prefer-ip-address: true
    instance-id: ${spring.application.name}:${random.int}
    lease-renewal-interval-in-seconds: 30
    lease-expiration-duration-in-seconds: 90

# Configuration spécifique Admin
admin:
  docker:
    socket-path: ${ADMIN_DOCKER_SOCKET:/var/run/docker.sock}
    compose-file: ${ADMIN_COMPOSE_FILE:/app/docker-compose-base.yml}
    project-name: ${ADMIN_PROJECT_NAME:esaa-erp01}
  
  monitoring:
    enabled: true
    interval: 30s
    services:
      - name: auth-service
        url: http://auth-service:8083/actuator/health
      - name: audit-service
        url: http://audit-service:8084/actuator/health
      - name: admission-service
        url: http://admission-service:8085/actuator/health
      - name: ai-local-service
        url: http://ai-local-service:8088/actuator/health
      - name: gateway
        url: http://gateway:8080/actuator/health
      - name: eureka-server
        url: http://eureka-server:8761/actuator/health

# Configuration des logs
logging:
  level:
    com.esaa.admin: DEBUG
    org.springframework.security: DEBUG
    org.springframework.web: INFO
    com.github.dockerjava: WARN
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n"
    file: "%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n"
  file:
    name: /app/logs/admin-service.log

# Configuration Actuator pour monitoring
management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics,prometheus,beans,env
      base-path: /actuator
  endpoint:
    health:
      show-details: always
      show-components: always
  metrics:
    export:
      prometheus:
        enabled: true
  info:
    env:
      enabled: true

# Informations de l'application
info:
  app:
    name: ESAA Admin Service
    description: Service d'administration et monitoring pour ERP ESAA
    version: 1.0.0
    encoding: UTF-8
    java:
      version: 21
  system:
    timezone: Africa/Algiers
    locale: fr_DZ

---
# Configuration pour environnement de développement
spring:
  config:
    activate:
      on-profile: dev
  redis:
    host: localhost
    port: 6379

eureka:
  client:
    enabled: true
    register-with-eureka: true
    fetch-registry: true
    service-url:
      defaultZone: http://localhost:8761/eureka/

admin:
  docker:
    socket-path: npipe:////./pipe/docker_engine  # Pour Windows
  monitoring:
    services:
      - name: auth-service
        url: http://localhost:8083/actuator/health
      - name: audit-service
        url: http://localhost:8084/actuator/health
      - name: admission-service
        url: http://localhost:8085/actuator/health
      - name: ai-local-service
        url: http://localhost:8088/actuator/health
      - name: gateway
        url: http://localhost:8080/actuator/health
      - name: eureka-server
        url: http://localhost:8761/actuator/health

---
# Configuration pour production
spring:
  config:
    activate:
      on-profile: prod
  
  redis:
    host: redis-cluster
    port: 6379
    ssl: true
    password: ${REDIS_PASSWORD:}
    
  security:
    user:
      password: ${ADMIN_PROD_PASSWORD:}

eureka:
  client:
    enabled: true
    register-with-eureka: true
    fetch-registry: true

admin:
  monitoring:
    interval: 15s  # Plus fréquent en production
    
# Configuration de sécurité renforcée pour production
management:
  endpoints:
    web:
      exposure:
        include: health,metrics,prometheus  # Limitée en production
  endpoint:
    health:
      show-details: when-authorized

logging:
  level:
    com.esaa.admin: INFO
    org.springframework.security: WARN
    org.springframework.web: WARN
  file:
    name: /var/log/esaa/admin-service.log
    max-size: 100MB
    max-history: 30

---
# Configuration pour Kubernetes
spring:
  config:
    activate:
      on-profile: kubernetes
      
  redis:
    host: redis-service
    port: 6379

eureka:
  client:
    enabled: false  # Utiliser Kubernetes Service Discovery

admin:
  docker:
    enabled: false  # Pas de contrôle Docker direct dans K8s
  monitoring:
    services:
      - name: auth-service
        url: http://auth-service-svc:8083/actuator/health
      - name: audit-service
        url: http://audit-service-svc:8084/actuator/health
      - name: admission-service
        url: http://admission-service-svc:8085/actuator/health
      - name: ai-local-service
        url: http://ai-local-service-svc:8088/actuator/health
      - name: gateway
        url: http://gateway-svc:8080/actuator/health
